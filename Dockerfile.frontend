FROM node:18-alpine as build

WORKDIR /app

# Copy package files first to leverage Docker caching
COPY package*.json ./
COPY frontend/package*.json ./frontend/

# Install dependencies
RUN npm ci

# Copy remaining files
COPY . .

# Build the frontend application
RUN npm run build --workspace=frontend

# Production stage using Nginx
FROM nginx:alpine

# Copy built files from build stage
COPY --from=build /app/frontend/dist /usr/share/nginx/html

# Copy nginx configuration
COPY ./nginx.conf /etc/nginx/conf.d/default.conf

EXPOSE 80

CMD ["nginx", "-g", "daemon off;"] 